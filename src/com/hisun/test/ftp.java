package info.yish.sty.net;
import java.io.FileInputStream;import java.io.IOException;import java.io.OutputStream;import java.util.logging.FileHandler;import java.util.logging.Logger;
import org.apache.commons.net.ftp.FTP;import org.apache.commons.net.ftp.FTPClient;import org.apache.commons.net.ftp.FTPReply;
public class FTPTool {        private Logger logger = Logger.getLogger(getClass().getName());
    public String upload(String hostname, String username, String password, String ftpDir, boolean asciiTransMode, String...files) {                               FTPClient client = new FTPClient();        FileInputStream fis = null;        String resultMsg = "";                try {            client.connect(hostname);            boolean isLogin = client.login(username, password);            if (!isLogin) {                client.logout();                  resultMsg = "LOGIN ERROR !";                System.out.println(resultMsg);                return resultMsg;            }            client.sendNoOp();            int replyCode = client.getReplyCode();            if (!FTPReply.isPositiveCompletion(replyCode)) {                client.disconnect();                resultMsg = "Connection ERROR !";                System.out.println(resultMsg);                return resultMsg;            }                        client.changeWorkingDirectory(ftpDir);            if (asciiTransMode) {                client.setFileTransferMode(FTP.ASCII_FILE_TYPE);            }                client.setControlKeepAliveReplyTimeout(120);            client.enterLocalPassiveMode();                      for (String filename : files) {                                logger.info("...Begin to upload file: " + filename);                long start = System.currentTimeMillis();                                fis = new FileInputStream(filename);                            boolean isFileStored = false;                                //METHOD 1 //  isFileStored = client.storeFile(filename, fis);                                //METHOD 2                OutputStream outputStream = client.storeFileStream(filename);               // System.out.println("...Reply : " + client.getReply());                System.out.println("...ReplyCode : " + client.getReplyCode());                                                byte[] bytes = new byte[4096];                int read = 0;                while ((read = fis.read(bytes)) != -1) {                    System.out.println("...bytes: " + bytes);                    System.out.println("...bytes length: " + bytes.length);                    System.out.println("...outputStream: " + outputStream);                    outputStream.write(bytes, 0, read);                }                fis.close();                outputStream.close();                isFileStored = client.completePendingCommand();                                long end = System.currentTimeMillis();                logger.info("...End of file upload: " + filename + ", isFileStored:  " + isFileStored                        + ", and take of time: " + (end - start) + " (in miniseconds), " + (end - start) / 60000 + " (in minuts)" );
            }                        client.logout();            resultMsg = "FTP all successfully. ";        } catch (Exception ie) {            resultMsg = "FTP error: " + ie.getMessage();            System.out.println(resultMsg);            ie.printStackTrace();        } finally {            try {                /*if (fis != null) {                    fis.close();                }*/                client.disconnect();            } catch (Exception e) {                System.out.println("FTP disconnect exception");                e.printStackTrace();            }        }                System.out.println(resultMsg);                return resultMsg;    }         public Logger getLogger() {        return logger;    }
    public static void main(String[] args) throws SecurityException, IOException {        String hostname = null ; // "10.100.231.38";        String username = null; // "root";        String password = null; // "abc123";        String ftpDir = null; // "/tmp/Geo";        boolean asciiTransMode;        String[] files = null; // new String[]{"out0.log"};                //Check args: hostname, username, password, ftpDir, files        if (args.length < 6) {            System.out.println("Please see usage: java -jar ftpClientTool.jar 10.100.231.111 root 111111 /tmp false out1.dat out2.dat ");                        return;        } else {            hostname = args[0];             username = args[1];            password = args[2];            ftpDir = args[3];            asciiTransMode = Boolean.valueOf(args[4]).booleanValue();                        files = new String[args.length - 5];            for (int i = 5; i < args.length; i++) {                files[i - 5] = args[i];            }                        FTPTool instance = new FTPTool();                        instance.getLogger().addHandler(new FileHandler("ftpLog.txt"));                        instance.upload(hostname, username, password, ftpDir, asciiTransMode, files);        }                                  }}
